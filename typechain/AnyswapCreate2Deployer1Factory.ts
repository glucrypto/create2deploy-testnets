/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AnyswapCreate2Deployer1 } from "./AnyswapCreate2Deployer1";

export class AnyswapCreate2Deployer1Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<AnyswapCreate2Deployer1> {
    return super.deploy(overrides || {}) as Promise<AnyswapCreate2Deployer1>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AnyswapCreate2Deployer1 {
    return super.attach(address) as AnyswapCreate2Deployer1;
  }
  connect(signer: Signer): AnyswapCreate2Deployer1Factory {
    return super.connect(signer) as AnyswapCreate2Deployer1Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnyswapCreate2Deployer1 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AnyswapCreate2Deployer1;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "code",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101a3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639c4ae2d014610030575b600080fd5b61004361003e3660046100a5565b610045565b005b6000818351602085016000f59050803b61005e57600080fd5b604080516001600160a01b0383168152602081018490527fb03c53b28e78a88e31607a27e1fa48234dce28d5d9d9ec7b295aeb02e674a1e1910160405180910390a1505050565b600080604083850312156100b7578182fd5b823567ffffffffffffffff808211156100ce578384fd5b818501915085601f8301126100e1578384fd5b8135818111156100f3576100f3610157565b604051601f8201601f19908116603f0116810190838211818310171561011b5761011b610157565b81604052828152886020848701011115610133578687fd5b82602086016020830137918201602090810196909652509694909301359450505050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212200052cc556e9ccf9f7a46986588629f421b93c6c10c1670724f808116f25390f064736f6c63430008020033";
